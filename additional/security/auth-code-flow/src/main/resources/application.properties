spring.application.name=auth-code-flow
server.port=8081
#spring.security.oauth2.client.registration.oauth2-authorization-code-flow.client-id=oauth2-authorization-code-flow
#spring.security.oauth2.client.registration.oauth2-authorization-code-flow.client-secret=XgEDh2HuHo4EhJYGXyvrKvg7HeYKg6NG
#spring.security.oauth2.client.registration.oauth2-authorization-code-flow.scope=openid,profile,roles,email
#spring.security.oauth2.client.registration.oauth2-authorization-code-flow.authorization-grant-type=authorization_code
#spring.security.oauth2.client.provider.oauth2-authorization-code-flow.issuer-uri=http://localhost:8443/realms/oauth2-demos
#spring.security.oauth2.client.registration.oauth2-authorization-code-flow.redirect-uri=http://localhost:8080/login/oauth2/code/oauth2-authorization-code-flow
#
#logging.level.org.springframework.security.oauth2=debug

spring.security.oauth2.client.registration.oauth2-client-credentials.client-id=oauth2-client-credentials
spring.security.oauth2.client.registration.oauth2-client-credentials.client-secret=7tU2h7De74pnbxtaORq2Vlfzb4UFJfc5
spring.security.oauth2.client.registration.oauth2-client-credentials.authorization-grant-type=client_credentials
spring.security.oauth2.client.registration.oauth2-client-credentials.scope=openid
spring.security.oauth2.client.provider.oauth2-client-credentials.token-uri=http://localhost:8443/realms/oauth2-demos/protocol/openid-connect/token

service2.url=http://localhost:8082